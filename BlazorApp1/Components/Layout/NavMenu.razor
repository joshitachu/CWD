
@inherits LayoutComponentBase
@rendermode InteractiveServer
@inject AssetStateService AssetStateService
@inject NavigationManager NavigationManager



<div class="nav-scrollable" @onclick="@ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/Model" Match="NavLinkMatch.All">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Simulatie
            </NavLink>
        </div>

         <div class="nav-item px-3">
            <NavLink class="nav-link" href="/Assets" Match="NavLinkMatch.All">
               <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Assets
            </NavLink>
        </div>

        


          
       

    </nav>

</div>

@* <div id="content">

    @if(clicked){
        <BlazorApp1.Components.Pages.AssetDetails SelectedAsset="selectedAsset" ></BlazorApp1.Components.Pages.AssetDetails>  
    }

</div> *@

@code {

    

    private bool collapseNavMenu = true;
    private bool expandSubMenu = false;

    private string submenuStyle => expandSubMenu ? "display:block" : "display:none";

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void ToggleSubMenu()
    {
        expandSubMenu = !expandSubMenu; // Toggle the value of expandSubMenu
    }

    string? json2;
    Root root;
    [Parameter]
    public Asset selectedAsset { get; set; }

    [Parameter]
    public string test{get;set;}
    int count;

    private bool clicked;

    string selected = "";

    protected override void OnInitialized()
    {
        json2 = System.IO.File.ReadAllText("wwwroot/config_bestand_simualtie_in_json.json");

        // Deserialization
        root = Newtonsoft.Json.JsonConvert.DeserializeObject<Root>(json2);

        // Initialize count
        count = root?.installation?.assets?.Count ?? 0;
    }

    public void SelectAsset(string assetType)
    {
        selectedAsset = root.installation.assets.FirstOrDefault(a => a.init.name == assetType);
        clicked=true;
        AssetStateService.SelectedAsset = selectedAsset;
        NavigationManager.NavigateTo("/assetDetails");


        
        
        this.selected=assetType;
        
        
    }

     

     
}

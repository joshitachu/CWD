@page "/assetDetails"
@inject AssetStateService AssetStateService
@rendermode InteractiveServer

<img src="@GetAssetImagePath(selectedAsset?.type)" alt="Asset Image">
@if (selectedAsset != null)
{
    <div class="dashboard">
        <div class="asset-details">
            <h2 style="margin-top: 0">@selectedAsset.type Details</h2>
            <table class="asset-table">
              
                    <tr>
                        <th>@selectedAsset.init.name</th>
                        <td>@selectedAsset.init.t0</td>
                    </tr>
                
            </table>
            
            <div class="component-list">
                    <h3>Components</h3>
                
                <table class="component-table">
                    @foreach(var component in selectedAsset.init.components)
                    { if(!(component.Key ==null && component.Value ==null)){
                        <tr>
                            <th>@component.Key</th>
                            <td>@component.Value</td>
                        </tr>
                    }else{
                        <p>no components to show</p>
                    }

                    }
                        
                </table>
            </div>
        </div>

        <div class="output-input">
            @if (selectedAsset.outputs?.components != null)
            {
                <div class="outputs">
                    <h3>Outputs</h3>
                    <table class="component-table">
                        @foreach(var component in selectedAsset.outputs.components)
                        {
                            <tr>
                                <th>@component.Key</th>
                                <td>@component.Value</td>
                            </tr>
                        }
                    </table>
                </div>
            }

            @if (selectedAsset.inputs?.components != null)
            {
                <div class="inputs">
                    <h3>Inputs</h3>
                    <table class="component-table">
                        @foreach(var component in selectedAsset.inputs.components)
                        {
                            <tr>
                                <th>@component.Key</th>
                                <td>@component.Value</td>
                            </tr>
                        }
                    </table>
                </div>
            }
        </div>
    </div>
}
else
{
    <p>No asset selected.</p>
}
@code {
    [Parameter]
    public Asset SelectedAsset { get; set; }

    private Asset selectedAsset;

    protected override void OnInitialized()
    {
        selectedAsset = AssetStateService.SelectedAsset;
        AssetStateService.OnAssetSelectionChanged += HandleAssetSelectionChanged;
    }

    private void HandleAssetSelectionChanged()
    {
        selectedAsset = AssetStateService.SelectedAsset;
        StateHasChanged();
    }

    public void Dispose()
    {
        AssetStateService.OnAssetSelectionChanged -= HandleAssetSelectionChanged;
    }

    private Dictionary<string, string> assetImagePaths = new Dictionary<string, string>
{
    { "EmmaPlc", "imgs/EmmaPlc.jpg" },
    { "AssetType2", "imgs/EmmaPlc" },
    // Add more mappings as needed
};

private string GetAssetImagePath(string assetType)
{
    if (assetType != null && assetImagePaths.ContainsKey(assetType))
    {
        return assetImagePaths[assetType];
    }else{
    // Return a default image path if the asset type is not found
    return "imgs/default_image.png";
    }
}
}
